test_negative/negative.py:28: error: "Simple1" has no attribute "SerializeToStringg"
test_negative/negative.py:31: error: Argument 1 to "ParseFromString" of "Message" has incompatible type "Simple1"; expected "Union[str, buffer, unicode]"
test_negative/negative.py:34: error: Argument 1 to "CopyFrom" of "Message" has incompatible type "str"; expected "Simple1"
test_negative/negative.py:38: error: Argument 1 to "extend" of "list" has incompatible type "RepeatedScalarFieldContainer[unicode]"; expected "Iterable[int]"
test_negative/negative.py:40: error: Argument "foo" to "TestMessage" has incompatible type "int"; expected "Optional[unicode]"
test_negative/negative.py:43: error: Incompatible types in assignment (expression has type "int", variable has type "OuterEnumValue")
test_negative/negative.py:46: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['garbage']"; expected <union: 36 items>
test_negative/negative.py:47: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['a_repeated_string']"; expected <union: 36 items>
test_negative/negative.py:51: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'garbage']"; expected <union: 24 items>
test_negative/negative.py:52: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'a_string']"; expected <union: 24 items>
test_negative/negative.py:53: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'outer_enum']"; expected <union: 24 items>
test_negative/negative.py:54: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'a_repeated_string']"; expected <union: 24 items>
test_negative/negative.py:57: error: Argument 1 to "ClearField" of "Simple1" has incompatible type "Literal['garbage']"; expected <union: 42 items>
test_negative/negative.py:60: error: Argument 1 to "ClearField" of "SimpleProto3" has incompatible type "Literal['garbage']"; expected <union: 36 items>
test_negative/negative.py:63: error: Argument 1 to "WhichOneof" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_oneof'], Literal['a_oneof']]"
test_negative/negative.py:65: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]", variable has type "int")
test_negative/negative.py:69: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]"; expected "Union[Literal[u'a_string'], Literal['a_string']]"
test_negative/negative.py:72: error: No overload variant of "WhichOneof" of "SimpleProto3" matches argument type "str"
test_negative/negative.py:72: note: Possible overload variants:
test_negative/negative.py:72: note:     def WhichOneof(self, oneof_group: Union[Literal[u'a_oneof'], Literal['a_oneof']]) -> Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]
test_negative/negative.py:72: note:     def WhichOneof(self, oneof_group: Union[Literal[u'b_oneof'], Literal['b_oneof']]) -> Union[Literal[u'b_oneof_1'], Literal[u'b_oneof_2']]
test_negative/negative.py:74: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]", variable has type "int")
test_negative/negative.py:77: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]"; expected "Union[Literal[u'a_string'], Literal['a_string']]"
test_negative/negative.py:81: error: Incompatible types in assignment (expression has type "_ExtensionFieldDescriptor[Simple1, Extensions1]", variable has type "int")
test_negative/negative.py:82: error: "Type[Extensions1]" has no attribute "bad"
test_negative/negative.py:84: error: "Extensions1" has no attribute "foo"
test_negative/negative.py:85: error: Incompatible types in assignment (expression has type "Extensions2", variable has type "Extensions1")
test_negative/negative.py:86: error: Invalid index type "str" for "_ExtensionDict[Simple1]"; expected type "_ExtensionFieldDescriptor[Simple1, <nothing>]"
test_negative/negative.py:87: error: Invalid index type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]" for "_ExtensionDict[Simple1]"; expected type "_ExtensionFieldDescriptor[Simple1, SeparateFileExtension]"
test_negative/negative.py:91: error: Incompatible types in assignment (expression has type "Union[Literal[u'b_oneof_1'], Literal[u'b_oneof_2']]", variable has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]")
test_negative/negative.py:94: error: "Descriptor" has no attribute "Garbage"
test_negative/negative.py:95: error: "Descriptor" has no attribute "Garbage"
test_negative/negative.py:98: error: "EnumDescriptor" has no attribute "Garbage"
test_negative/negative.py:101: error: "FileDescriptor" has no attribute "Garbage"
test_negative/negative.py:108: error: "OuterEnumValue" has no attribute "FOO"
test_negative/negative.py:112: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "int"; expected "OuterEnumValue"
test_negative/negative.py:114: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "InnerEnumValue"; expected "OuterEnumValue"
test_negative/negative.py:116: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "InnerEnumValue"; expected "OuterEnumValue"
test_negative/negative.py:118: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "InnerEnumValue"; expected "OuterEnumValue"
Found 36 errors in 1 file (checked 20 source files)
